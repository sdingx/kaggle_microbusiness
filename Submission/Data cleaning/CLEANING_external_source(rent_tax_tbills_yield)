{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP/xLnrVGAQmtNedA2Hv1ae"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jLN0zcfX70ns","executionInfo":{"status":"ok","timestamp":1676852868371,"user_tz":360,"elapsed":14951,"user":{"displayName":"Yang Wu","userId":"15296436955879077113"}},"outputId":"5da72c9d-f71c-4033-85ce-2fbdab7588b1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["import requests\n","import pandas as pd\n","import numpy as np\n","import re\n","from bs4 import BeautifulSoup\n","\n","from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["## Path"],"metadata":{"id":"zLsyMxQwNs6B"}},{"cell_type":"code","source":["path_gdrive = '/content/drive/Shareddrives/DMP-W23/Repo/data/'"],"metadata":{"id":"MMjQ6GOiNvFv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Train Data"],"metadata":{"id":"HicBsPNrQc8W"}},{"cell_type":"code","source":["# Obtain the list of cfips\n","cfips_unique = np.unique(pd.read_csv(path_gdrive + 'train.csv', usecols=['cfips']).values)\n","cfips_unique"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ceir5I0wQfBe","executionInfo":{"status":"ok","timestamp":1676853604805,"user_tz":360,"elapsed":145,"user":{"displayName":"Yang Wu","userId":"15296436955879077113"}},"outputId":"fa3aa679-c488-45a0-f218-faef808c6907"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1001,  1003,  1005, ..., 56041, 56043, 56045])"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["## Rent Data\n","\n","The 50th Percentile Rent Estimate Data was sourced from the Office of Policy Development and Research. This source could provide a sense of economic health in each county. The frequency of this dataset is annual and provides a median estimation of rent prices for 0, 1, 2 and 3-bedroom rentals each year.\n","\n","Some counties in the raw data have multiple estimates, so we take the median estimate for each county each year.\n","\n","Source: [Data](https://www.huduser.gov/portal/datasets/50per.html#2019)"],"metadata":{"id":"V_VpRW7oNTnI"}},{"cell_type":"code","source":["county_files = [\n","    'Archived/FY2019_50_County_rev.xlsx',\n","    'Archived/FY2020_50_County_rev.xlsx', \n","    'Archived/FY2021_50_County.xlsx',\n","    'Archived/FY2022_FMR_50_county_rev.csv',\n","    'Archived/FY2023_FMR_50_county.csv',\n","]\n","\n","county_files = [path_gdrive + path for path in county_files]\n","\n","columns = ['cfips', 'med_rent_zero_bed', 'med_rent_one_bed', 'med_rent_two_beds', 'med_rent_three_beds', 'year']\n","\n","all_values = []\n","for file in county_files:\n","  \n","  if file.endswith('xlsx'):\n","    df = pd.read_excel(file)\n","    df = df.rename(columns={'state':'state_code', 'county':'county_code', 'rent50_0':'med_rent_zero_bed', 'rent50_1':'med_rent_one_bed', 'rent50_2':'med_rent_two_beds', 'rent50_3':'med_rent_three_beds'})\n","  else:\n","    df = pd.read_csv(file)\n","    df = df.rename(columns={'state':'state_code', 'county':'county_code', 'rent50_0':'med_rent_zero_bed', 'rent50_1':'med_rent_one_bed', 'rent50_2':'med_rent_two_beds', 'rent50_3':'med_rent_three_beds'})\n","\n","  # Obtain cfips\n","  df['cfips'] = (df['state_code'].astype(str).str.zfill(2) + df['county_code'].astype(str).str.zfill(3)).astype(int)\n","  df = df.sort_values('cfips').reset_index(drop=True)\n","\n","  # Filter Rows\n","  df['year'] = df['year'] = int(re.findall('(?<=Y)[0-9]+', file)[0]) # Positive look behind the upper case 'Y' and find numeric values\n","  df = df[columns]\n","  all_values.append(df.values)\n","\n","# Combine and take median for duplicate rows\n","rent_df = pd.DataFrame(np.vstack(all_values), columns=columns) # Stack arrays vertically (row-wise)\n","rent_df = rent_df.groupby(['cfips','year']).median().reset_index()\n","rent_df = rent_df[rent_df['cfips'].isin(cfips_unique)].reset_index(drop=True)\n","\n","rent_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"godi7kUWNVBv","executionInfo":{"status":"ok","timestamp":1676854975628,"user_tz":360,"elapsed":7368,"user":{"displayName":"Yang Wu","userId":"15296436955879077113"}},"outputId":"eef1d547-65f3-4555-c934-b1281c2c76ae"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       cfips  year  med_rent_zero_bed  med_rent_one_bed  med_rent_two_beds  \\\n","0       1001  2019              620.0             743.0              880.0   \n","1       1001  2020              615.0             741.0              876.0   \n","2       1001  2021              685.0             820.0              972.0   \n","3       1001  2022              687.0             816.0              976.0   \n","4       1001  2023              773.0             882.0             1055.0   \n","...      ...   ...                ...               ...                ...   \n","15670  56045  2019              638.0             678.0              883.0   \n","15671  56045  2020              696.0             707.0              931.0   \n","15672  56045  2021              733.0             738.0              973.0   \n","15673  56045  2022              752.0             757.0              996.0   \n","15674  56045  2023              777.0             782.0             1030.0   \n","\n","       med_rent_three_beds  \n","0                   1112.0  \n","1                   1105.0  \n","2                   1229.0  \n","3                   1234.0  \n","4                   1340.0  \n","...                    ...  \n","15670               1106.0  \n","15671               1160.0  \n","15672               1210.0  \n","15673               1231.0  \n","15674               1254.0  \n","\n","[15675 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-79c0eff8-6de5-49ff-a03d-4bfe6a041200\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cfips</th>\n","      <th>year</th>\n","      <th>med_rent_zero_bed</th>\n","      <th>med_rent_one_bed</th>\n","      <th>med_rent_two_beds</th>\n","      <th>med_rent_three_beds</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1001</td>\n","      <td>2019</td>\n","      <td>620.0</td>\n","      <td>743.0</td>\n","      <td>880.0</td>\n","      <td>1112.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001</td>\n","      <td>2020</td>\n","      <td>615.0</td>\n","      <td>741.0</td>\n","      <td>876.0</td>\n","      <td>1105.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001</td>\n","      <td>2021</td>\n","      <td>685.0</td>\n","      <td>820.0</td>\n","      <td>972.0</td>\n","      <td>1229.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1001</td>\n","      <td>2022</td>\n","      <td>687.0</td>\n","      <td>816.0</td>\n","      <td>976.0</td>\n","      <td>1234.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1001</td>\n","      <td>2023</td>\n","      <td>773.0</td>\n","      <td>882.0</td>\n","      <td>1055.0</td>\n","      <td>1340.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15670</th>\n","      <td>56045</td>\n","      <td>2019</td>\n","      <td>638.0</td>\n","      <td>678.0</td>\n","      <td>883.0</td>\n","      <td>1106.0</td>\n","    </tr>\n","    <tr>\n","      <th>15671</th>\n","      <td>56045</td>\n","      <td>2020</td>\n","      <td>696.0</td>\n","      <td>707.0</td>\n","      <td>931.0</td>\n","      <td>1160.0</td>\n","    </tr>\n","    <tr>\n","      <th>15672</th>\n","      <td>56045</td>\n","      <td>2021</td>\n","      <td>733.0</td>\n","      <td>738.0</td>\n","      <td>973.0</td>\n","      <td>1210.0</td>\n","    </tr>\n","    <tr>\n","      <th>15673</th>\n","      <td>56045</td>\n","      <td>2022</td>\n","      <td>752.0</td>\n","      <td>757.0</td>\n","      <td>996.0</td>\n","      <td>1231.0</td>\n","    </tr>\n","    <tr>\n","      <th>15674</th>\n","      <td>56045</td>\n","      <td>2023</td>\n","      <td>777.0</td>\n","      <td>782.0</td>\n","      <td>1030.0</td>\n","      <td>1254.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15675 rows Ã— 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-79c0eff8-6de5-49ff-a03d-4bfe6a041200')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-79c0eff8-6de5-49ff-a03d-4bfe6a041200 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-79c0eff8-6de5-49ff-a03d-4bfe6a041200');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["Check all counties have data for all 5 years:"],"metadata":{"id":"xr4pihh6SX2r"}},{"cell_type":"code","source":["(rent_df.groupby('cfips')['year'].nunique() == 5).all()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6ta_nYtiSa6F","executionInfo":{"status":"ok","timestamp":1676854982154,"user_tz":360,"elapsed":128,"user":{"displayName":"Yang Wu","userId":"15296436955879077113"}},"outputId":"1df2e760-1fcf-4391-83f6-5194658871a8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":33}]},{"cell_type":"markdown","source":["Any missing values?"],"metadata":{"id":"oYmat6tsS0O9"}},{"cell_type":"code","source":["rent_df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pfxk5YuQS1uC","executionInfo":{"status":"ok","timestamp":1676854984246,"user_tz":360,"elapsed":4,"user":{"displayName":"Yang Wu","userId":"15296436955879077113"}},"outputId":"5b77f784-a816-46bf-d5bb-419947203188"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["cfips                  0\n","year                   0\n","med_rent_zero_bed      0\n","med_rent_one_bed       0\n","med_rent_two_beds      0\n","med_rent_three_beds    0\n","dtype: int64"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","source":["Write to disk:"],"metadata":{"id":"HLQdXfEJS6Xe"}},{"cell_type":"code","source":["rent_df.to_csv(path_gdrive + 'OUTPUT_annual_rent.csv', index=False)"],"metadata":{"id":"a3kK_nK2S7Xa"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Tax\n","\n","This source provides information on the Top Marginal Corporate Income Tax Rate by state and year. This data was sourced from Richstatespoorstates, and could be used as another economic indicator.\n","\n","Source: [Data](https://www.richstatespoorstates.org/variables/corporate_income_tax_rate/)"],"metadata":{"id":"aWmKMwoIWQy6"}},{"cell_type":"code","source":["# Fetch HTML from URL\n","r = requests.get('https://www.richstatespoorstates.org/variables/corporate_income_tax_rate/')\n","\n","# Response text\n","html = r.text\n","\n","# Parse the HTML\n","soup = BeautifulSoup(html, \"html.parser\")\n","\n","# Getting Historical Tax Rate Table\n","historical_table = soup.find_all('table', class_='table table-striped data-table')[1]\n","tax_df = pd.read_html(str(historical_table))[0]\n","\n","# Converting Percent Strings to Floats\n","for col in tax_df.columns[1:]:\n","    tax_df[col] = tax_df[col].str[:-1].astype('float') # Remove percentage symbols (last character in the string)\n","\n","# Manually adding District of Columbia\n","tax_df2 = pd.DataFrame([['District of Columbia', 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.4, 9.2, 9.0, 8.25, 8.25, 8.25, 8.25, 8.25]], columns=tax_df.columns)\n","tax_df = pd.concat([tax_df, tax_df2])\n","\n","# Transforming Data\n","tax_df = tax_df.melt(id_vars=['State'])\n","tax_df = tax_df.rename(columns={'variable': 'year', 'value':'tax_rate', 'State':'state'})\n","tax_df['year'] = tax_df['year'].astype(int)\n","\n","# Difference from last years tax rate\n","tax_df['tax_rate_diff'] = tax_df.groupby(['state'])['tax_rate'].diff().fillna(0)"],"metadata":{"id":"qezVHy-aWev0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Does the data cover the test data? "],"metadata":{"id":"26vos7fkYxh1"}},{"cell_type":"code","source":["tax_df['year'].max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wFNLgAGDY07E","executionInfo":{"status":"ok","timestamp":1676855702108,"user_tz":360,"elapsed":178,"user":{"displayName":"Yang Wu","userId":"15296436955879077113"}},"outputId":"0fdd3724-b1dc-41e1-9e66-0fffbab7b6f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2022"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["Any missing values?"],"metadata":{"id":"MyHdqW_LY3un"}},{"cell_type":"code","source":["tax_df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hrzUIPmZY4iD","executionInfo":{"status":"ok","timestamp":1676855719535,"user_tz":360,"elapsed":363,"user":{"displayName":"Yang Wu","userId":"15296436955879077113"}},"outputId":"85083cc5-065e-4fe4-8967-b77338021563"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["state            0\n","year             0\n","tax_rate         0\n","tax_rate_diff    0\n","dtype: int64"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["Write to disk:"],"metadata":{"id":"dFReseuYY8EN"}},{"cell_type":"code","source":["tax_df.to_csv(path_gdrive + 'OUTPUT_marg_corp_tax.csv', index=False)"],"metadata":{"id":"dFxh9EzMY891"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## US Treasury Market Yield\n","\n","The Market Yield on U.S. Treasury Securities at 10-Year Constant Maturity dataset was sourced from the Federal Reserve Bank of St Louis. The frequency of this dataset is daily.\n","\n","Since we are making predictions each month, we select the measurement closest but less than the 15th each month (this is because the competition ends on the 14th), and join this with that in the training data.\n","\n","Source: [Data](https://fred.stlouisfed.org/series/DGS10)"],"metadata":{"id":"gdUY3_7EZF63"}},{"cell_type":"code","source":["# Load Data\n","ust_df = pd.read_csv(path_gdrive + 'Archived/DGS10.csv')\n","ust_df['DATE'] = pd.to_datetime(ust_df['DATE'])\n","ust_df['DGS10'] = ust_df['DGS10'].replace(\".\", np.nan).ffill().astype(float)\n","\n","# Select last value in each month < day 15 (comepetition ends on the 14th)\n","ust_df = ust_df[ust_df['DATE'].dt.day < 15].groupby([ust_df['DATE'].dt.year, ust_df['DATE'].dt.month]).tail(1).reset_index(drop=True)\n","ust_df['DATE'] = ust_df['DATE'].apply(lambda dt: dt.replace(day=1))\n","ust_df = ust_df.rename(columns={'DATE':'first_day_of_month'})\n","\n","ust_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"c2wj1QijZhFe","executionInfo":{"status":"ok","timestamp":1676856152515,"user_tz":360,"elapsed":1162,"user":{"displayName":"Yang Wu","userId":"15296436955879077113"}},"outputId":"5c89c983-599f-4079-f4a4-713d30d94f58"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   first_day_of_month  DGS10\n","0          2018-01-01   2.55\n","1          2018-02-01   2.91\n","2          2018-03-01   2.81\n","3          2018-04-01   2.82\n","4          2018-05-01   3.00\n","..                ...    ...\n","56         2022-09-01   3.41\n","57         2022-10-01   4.00\n","58         2022-11-01   3.88\n","59         2022-12-01   3.49\n","60         2023-01-01   3.79\n","\n","[61 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-651c734f-8fec-4c54-9b3b-560e93e1d339\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>first_day_of_month</th>\n","      <th>DGS10</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-01-01</td>\n","      <td>2.55</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-02-01</td>\n","      <td>2.91</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-03-01</td>\n","      <td>2.81</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018-04-01</td>\n","      <td>2.82</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018-05-01</td>\n","      <td>3.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>2022-09-01</td>\n","      <td>3.41</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>2022-10-01</td>\n","      <td>4.00</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>2022-11-01</td>\n","      <td>3.88</td>\n","    </tr>\n","    <tr>\n","      <th>59</th>\n","      <td>2022-12-01</td>\n","      <td>3.49</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>2023-01-01</td>\n","      <td>3.79</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>61 rows Ã— 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-651c734f-8fec-4c54-9b3b-560e93e1d339')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-651c734f-8fec-4c54-9b3b-560e93e1d339 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-651c734f-8fec-4c54-9b3b-560e93e1d339');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["# Save to disk\n","ust_df.to_csv(path_gdrive + 'OUTPUT_10yr_yield.csv', index=False)"],"metadata":{"id":"AOXS7RboaIx0"},"execution_count":null,"outputs":[]}]}